@page "/trips"
@using System.Net.Http;
@inject HttpClient Http;
@using HelsinkiCityBikeApp.Shared;

<PageTitle>Trips</PageTitle>
<div class="childDiv">

    <label>Depature Station Name</label>
    <input type="text" class="form-control" @bind-value="depatureStationName" />
    <label>Return Station Name</label>
    <input type="text" class="form-control" @bind-value="returnStationName" />
    <label>Min Covered Distance</label>
    <input type="number" class="form-control" @bind-value="minCoveredDistance" />
    <label>Depature Station Id</label>
    <input type="number" class="form-control" @bind-value="depatureStationId" />
    <button class="btn btn-primary" @onclick="FilterList">Filter</button>
</div>

<div class="mainDiv">

    @if (list != null)
    {
        @foreach (var trip in list)
        {
        <div class="childDiv">
            <table>
                <thead>
                    <tr>
                        <th>Departure</th>
                        <th>Departure Station Name</th>
                        <th>Duration (sec)</th>
                        <th>Covered Distance (m)</th>
           
                        <th>Return</th>
                        <th>Return Station Name</th>
                    </tr>
                </thead>
                <tbody>

               
                        <tr>
                            <td>@trip.Departure</td>
                            <td>@trip.DepartureStationName</td>
                            <td>@trip.Duration </td>
                            <td>@trip.CoveredDistance</td>
                    
                            <td>@trip.Return</td>
                            <td>@trip.ReturnStationName</td>
                        </tr>
                 
                </tbody>
            </table>
        </div>
        }       }
    else
    {
        <div class="childDiv">  <h2><img src="/img/loading.gif" width="150" /></h2></div>
    }

</div>

@code {
    private bool isRequestSuccessful = false;
    private List<Trip> list = new List<Trip>();
    private string url = "api/trips?";
    private int takeCount = 10;
    private string depatureStationName = "";
    private string returnStationName = "";
    private int minCoveredDistance = 0;
    private int depatureStationId = 0;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("api/trips?");
        isRequestSuccessful = response.IsSuccessStatusCode;
        Console.WriteLine("api is up " + isRequestSuccessful);
    }

    private async Task FilterList()
    {
        var queryParams = $"depatureStationName={depatureStationName}&returnStationName={returnStationName}&minCoveredDistance={minCoveredDistance}&depatureStationId={depatureStationId}&take={takeCount}";
        var response = await Http.GetAsync($"{url}{queryParams}");
        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Filtering error");
            list = await response.Content.ReadFromJsonAsync<List<Trip>>();
        }
    }
}
